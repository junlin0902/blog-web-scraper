import React from "react";
import { Fragment } from "react";
const extractCssFromAssetMap = () => {
  if (typeof window !== "undefined") {
    return window.__REDWOOD__ASSET_MAP?.css;
  }
  return void 0;
};
const extractMetaFromAssetMap = () => {
  if (typeof window !== "undefined") {
    return window.__REDWOOD__ASSET_MAP?.meta;
  }
  return void 0;
};
function addSlashIfNeeded(path) {
  if (path.startsWith("http") || path.startsWith("/")) {
    return path;
  } else {
    return "/" + path;
  }
}
const Css = ({ css }) => {
  const cssLinks = (css || extractCssFromAssetMap() || []).map(addSlashIfNeeded);
  return /* @__PURE__ */ React.createElement(React.Fragment, null, cssLinks.map((cssLink, index) => {
    return /* @__PURE__ */ React.createElement("link", { rel: "stylesheet", key: `css-${index}`, href: `${cssLink}` });
  }));
};
const Meta = ({ tags }) => {
  const metaTags = tags || extractMetaFromAssetMap() || [];
  return /* @__PURE__ */ React.createElement(React.Fragment, null, metaTags.map((tag, index) => {
    if (!tag) {
      return null;
    }
    if (isTitleTag(tag)) {
      return /* @__PURE__ */ React.createElement(Fragment, { key: "title" }, /* @__PURE__ */ React.createElement("title", null, tag.title), /* @__PURE__ */ React.createElement("meta", { property: "og:title", content: tag.title }));
    }
    if (otherTag(tag)) {
      const { tagType: TagName, ...rest } = tag;
      return /* @__PURE__ */ React.createElement(TagName, { key: `meta-${index}`, ...rest });
    }
    return /* @__PURE__ */ React.createElement("meta", { key: `meta-${index}`, ...tag });
  }));
};
const isTitleTag = (tag) => {
  return "title" in tag;
};
const otherTag = (tag) => {
  return "tagType" in tag;
};
export {
  Css,
  Meta
};
