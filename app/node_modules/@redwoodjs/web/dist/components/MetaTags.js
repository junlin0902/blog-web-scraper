import React from "react";
import * as helmetPkg from "react-helmet-async";
const { Helmet: HelmetHead } = helmetPkg;
import PortalHead from "./PortalHead.js";
const MetaTags = (props) => {
  const {
    tag = "og:image",
    ogType = "website",
    ogContentUrl,
    robots,
    contentType,
    ogWidth,
    ogHeight,
    ogUrl,
    title,
    locale,
    description,
    author,
    children
  } = props;
  let Head = HelmetHead;
  if (RWJS_ENV.RWJS_EXP_STREAMING_SSR) {
    Head = PortalHead;
  }
  return /* @__PURE__ */ React.createElement(React.Fragment, null, title && /* @__PURE__ */ React.createElement(Head, null, /* @__PURE__ */ React.createElement("title", null, title), /* @__PURE__ */ React.createElement("meta", { property: "og:title", content: title, key: "title" }), /* @__PURE__ */ React.createElement("meta", { property: "twitter:title", content: title })), description && /* @__PURE__ */ React.createElement(Head, null, /* @__PURE__ */ React.createElement("meta", { name: "description", content: description }), /* @__PURE__ */ React.createElement("meta", { name: "twitter:description", content: description }), /* @__PURE__ */ React.createElement("meta", { property: "og:description", content: description })), author && /* @__PURE__ */ React.createElement(Head, null, /* @__PURE__ */ React.createElement("meta", { name: "author", content: author }), /* @__PURE__ */ React.createElement("meta", { name: "twitter:site", content: author }), /* @__PURE__ */ React.createElement("meta", { name: "twitter:creator", content: author })), ogUrl && /* @__PURE__ */ React.createElement(Head, null, /* @__PURE__ */ React.createElement("meta", { property: "og:url", content: ogUrl })), locale && /* @__PURE__ */ React.createElement(Head, null, /* @__PURE__ */ React.createElement("html", { lang: locale }), /* @__PURE__ */ React.createElement("meta", { property: "og:locale", content: locale })), /* @__PURE__ */ React.createElement(Head, null, /* @__PURE__ */ React.createElement("meta", { property: "og:type", content: ogType })), ogContentUrl && /* @__PURE__ */ React.createElement(Head, null, /* @__PURE__ */ React.createElement("meta", { property: tag, content: ogContentUrl })), contentType && /* @__PURE__ */ React.createElement(Head, null, /* @__PURE__ */ React.createElement("meta", { property: `${tag}:type`, content: contentType })), tag === "og:image" && /* @__PURE__ */ React.createElement(Head, null, ogWidth && /* @__PURE__ */ React.createElement("meta", { property: "image:width", content: ogWidth }), ogHeight && /* @__PURE__ */ React.createElement("meta", { property: "image:height", content: ogHeight }), /* @__PURE__ */ React.createElement("meta", { property: "twitter:card", content: "summary_large_image" }), /* @__PURE__ */ React.createElement("meta", { property: "twitter:image", content: ogContentUrl })), robots && /* @__PURE__ */ React.createElement(Head, null, /* @__PURE__ */ React.createElement(
    "meta",
    {
      name: "robots",
      content: Array.isArray(robots) ? robots.join(", ") : robots
    }
  )), children);
};
export {
  MetaTags
};
