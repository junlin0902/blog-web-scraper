import type { ViteDevServer } from 'vite';
import type { RWRouteManifestItem } from '@redwoodjs/internal/dist/routes.js';
import type { MiddlewareRequest } from './MiddlewareRequest.js';
import type { MiddlewareResponse } from './MiddlewareResponse.js';
export * from './MiddlewareRequest.js';
export * from './MiddlewareResponse.js';
export type MiddlewareInvokeOptions = {
    route?: RWRouteManifestItem;
    cssPaths?: string[];
    params?: Record<string, unknown>;
    viteDevServer?: ViteDevServer;
};
export type Middleware = (req: MiddlewareRequest, res: MiddlewareResponse, options?: MiddlewareInvokeOptions) => Promise<MiddlewareResponse> | MiddlewareResponse | void;
export interface MiddlewareClass {
    invoke: Middleware;
}
//# sourceMappingURL=middleware.d.ts.map