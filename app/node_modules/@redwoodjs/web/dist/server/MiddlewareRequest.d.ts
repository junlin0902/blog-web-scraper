import { Request as WhatWgRequest } from '@whatwg-node/fetch';
import type { ServerAuthState } from '@redwoodjs/auth/dist/AuthProvider/ServerAuthProvider.js';
import { CookieJar } from '@redwoodjs/cookie-jar';
declare class AuthStateJar {
    private _data;
    private _initialState;
    constructor(initialState: ServerAuthState);
    /**
     * Always returns the server auth state, even if its set to null,
     * it'll fall back to the initial state (created when mwReq is initialized)
     */
    get(): ServerAuthState;
    set(value: ServerAuthState | null): void;
    clear(): void;
}
export declare class MiddlewareRequest extends WhatWgRequest {
    cookies: CookieJar;
    serverAuthState: AuthStateJar;
    constructor(input: Request);
}
/**
 * Converts a Web API Request object to a MiddlewareRequest object.
 * Also ensures that serverAuthState is fresh for each request
 * (assuming that it is a new instance for each request)
 */
export declare const createMiddlewareRequest: (req: Request) => MiddlewareRequest;
export {};
//# sourceMappingURL=MiddlewareRequest.d.ts.map