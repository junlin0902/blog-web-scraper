import { Request as WhatWgRequest } from "@whatwg-node/fetch";
import { middlewareDefaultAuthProviderState } from "@redwoodjs/auth/dist/AuthProvider/AuthProviderState.js";
import { CookieJar } from "@redwoodjs/cookie-jar";
class AuthStateJar {
  _data;
  _initialState;
  constructor(initialState) {
    this._data = initialState;
    this._initialState = initialState;
  }
  /**
   * Always returns the server auth state, even if its set to null,
   * it'll fall back to the initial state (created when mwReq is initialized)
   */
  get() {
    return this._data || this._initialState;
  }
  set(value) {
    this._data = value;
  }
  clear() {
    this._data = null;
  }
}
class MiddlewareRequest extends WhatWgRequest {
  cookies;
  serverAuthState;
  constructor(input) {
    super(input);
    const defaultServerAuthState = {
      ...middlewareDefaultAuthProviderState,
      cookieHeader: input.headers.get("Cookie"),
      roles: []
    };
    this.cookies = new CookieJar(input.headers.get("Cookie"));
    this.serverAuthState = new AuthStateJar(defaultServerAuthState);
  }
}
const createMiddlewareRequest = (req) => {
  const middlewareRequest = new MiddlewareRequest(req);
  return middlewareRequest;
};
export {
  MiddlewareRequest,
  createMiddlewareRequest
};
