"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var htmlTags_exports = {};
__export(htmlTags_exports, {
  Css: () => Css,
  Meta: () => Meta
});
module.exports = __toCommonJS(htmlTags_exports);
var import_react = __toESM(require("react"), 1);
var import_react2 = require("react");
const extractCssFromAssetMap = () => {
  if (typeof window !== "undefined") {
    return window.__REDWOOD__ASSET_MAP?.css;
  }
  return void 0;
};
const extractMetaFromAssetMap = () => {
  if (typeof window !== "undefined") {
    return window.__REDWOOD__ASSET_MAP?.meta;
  }
  return void 0;
};
function addSlashIfNeeded(path) {
  if (path.startsWith("http") || path.startsWith("/")) {
    return path;
  } else {
    return "/" + path;
  }
}
const Css = ({ css }) => {
  const cssLinks = (css || extractCssFromAssetMap() || []).map(addSlashIfNeeded);
  return /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null, cssLinks.map((cssLink, index) => {
    return /* @__PURE__ */ import_react.default.createElement("link", { rel: "stylesheet", key: `css-${index}`, href: `${cssLink}` });
  }));
};
const Meta = ({ tags }) => {
  const metaTags = tags || extractMetaFromAssetMap() || [];
  return /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null, metaTags.map((tag, index) => {
    if (!tag) {
      return null;
    }
    if (isTitleTag(tag)) {
      return /* @__PURE__ */ import_react.default.createElement(import_react2.Fragment, { key: "title" }, /* @__PURE__ */ import_react.default.createElement("title", null, tag.title), /* @__PURE__ */ import_react.default.createElement("meta", { property: "og:title", content: tag.title }));
    }
    if (otherTag(tag)) {
      const { tagType: TagName, ...rest } = tag;
      return /* @__PURE__ */ import_react.default.createElement(TagName, { key: `meta-${index}`, ...rest });
    }
    return /* @__PURE__ */ import_react.default.createElement("meta", { key: `meta-${index}`, ...tag });
  }));
};
const isTitleTag = (tag) => {
  return "title" in tag;
};
const otherTag = (tag) => {
  return "tagType" in tag;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Css,
  Meta
});
