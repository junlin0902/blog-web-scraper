import React from 'react';
import type { CellFailureProps } from './cellTypes.js';
export type FallbackProps = {
    error: QueryOperationResult['error'];
    resetErrorBoundary: () => void;
};
export type CellErrorBoundaryProps = {
    renderFallback: (fbProps: FallbackProps) => React.ReactElement<CellFailureProps>;
    children: React.ReactNode;
};
interface ErrState {
    hasError: boolean;
    error?: QueryOperationResult['error'];
}
export declare class CellErrorBoundary extends React.Component<CellErrorBoundaryProps, ErrState> {
    constructor(props: CellErrorBoundaryProps);
    static getDerivedStateFromError(error: Error): {
        hasError: boolean;
        error: Error;
    };
    componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void;
    render(): React.ReactNode;
}
export {};
//# sourceMappingURL=CellErrorBoundary.d.ts.map