"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var src_exports = {};
__export(src_exports, {
  FatalErrorBoundary: () => import_FatalErrorBoundary.FatalErrorBoundary,
  FetchConfigProvider: () => import_FetchConfigProvider.FetchConfigProvider,
  GraphQLHooksProvider: () => import_GraphQLHooksProvider.GraphQLHooksProvider,
  Head: () => Helmet,
  Helmet: () => Helmet,
  createCell: () => import_createCell.createCell,
  useFetchConfig: () => import_FetchConfigProvider.useFetchConfig,
  useMutation: () => import_GraphQLHooksProvider.useMutation,
  useQuery: () => import_GraphQLHooksProvider.useQuery,
  useSubscription: () => import_GraphQLHooksProvider.useSubscription
});
module.exports = __toCommonJS(src_exports);
var import_global_web_auto_imports = require("./global.web-auto-imports.js");
var import_config = require("./config.js");
var import_FatalErrorBoundary = require("./components/FatalErrorBoundary.js");
var import_FetchConfigProvider = require("./components/FetchConfigProvider.js");
var import_GraphQLHooksProvider = require("./components/GraphQLHooksProvider.js");
__reExport(src_exports, require("./components/cell/CellCacheContext.js"), module.exports);
var import_createCell = require("./components/cell/createCell.js");
__reExport(src_exports, require("./graphql.js"), module.exports);
__reExport(src_exports, require("./components/RedwoodProvider.js"), module.exports);
__reExport(src_exports, require("./components/MetaTags.js"), module.exports);
__reExport(src_exports, require("./components/Metadata.js"), module.exports);
var helmetPkg = __toESM(require("react-helmet-async"), 1);
__reExport(src_exports, require("./components/htmlTags.js"), module.exports);
__reExport(src_exports, require("./routeHooks.types.js"), module.exports);
__reExport(src_exports, require("./components/ServerInject.js"), module.exports);
const { Helmet } = helmetPkg;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  FatalErrorBoundary,
  FetchConfigProvider,
  GraphQLHooksProvider,
  Head,
  Helmet,
  createCell,
  useFetchConfig,
  useMutation,
  useQuery,
  useSubscription,
  ...require("./components/cell/CellCacheContext.js"),
  ...require("./graphql.js"),
  ...require("./components/RedwoodProvider.js"),
  ...require("./components/MetaTags.js"),
  ...require("./components/Metadata.js"),
  ...require("./components/htmlTags.js"),
  ...require("./routeHooks.types.js"),
  ...require("./components/ServerInject.js")
});
