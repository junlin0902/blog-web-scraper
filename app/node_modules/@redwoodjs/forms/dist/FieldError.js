"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var FieldError_exports = {};
__export(FieldError_exports, {
  FieldError: () => FieldError
});
module.exports = __toCommonJS(FieldError_exports);
var import_react = __toESM(require("react"));
var import_react_hook_form = require("react-hook-form");
const DEFAULT_MESSAGES = {
  required: "is required",
  pattern: "is not formatted correctly",
  minLength: "is too short",
  maxLength: "is too long",
  min: "is too low",
  max: "is too high",
  validate: "is not valid"
};
const FieldError = ({ name, ...rest }) => {
  const {
    formState: { errors }
  } = (0, import_react_hook_form.useFormContext)();
  const validationError = (0, import_react_hook_form.get)(errors, name);
  const errorMessage = validationError && (validationError.message || `${name} ${DEFAULT_MESSAGES[validationError.type]}`);
  return validationError ? /* @__PURE__ */ import_react.default.createElement("span", { ...rest }, errorMessage) : null;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  FieldError
});
