"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var detection_exports = {};
__export(detection_exports, {
  detectPrerenderRoutes: () => detectPrerenderRoutes
});
module.exports = __toCommonJS(detection_exports);
var import_project_config = require("@redwoodjs/project-config");
var import_structure = require("@redwoodjs/structure");
const detectPrerenderRoutes = () => {
  const rwProject = (0, import_structure.getProject)((0, import_project_config.getPaths)().base);
  const routes = rwProject.getRouter().routes;
  const prerenderRoutes = routes.filter((route) => route.prerender).map((route) => ({
    name: route.isNotFound ? "404" : route.name,
    // `path` will be updated/expanded later where route parameters will be
    // replaced with actual values
    path: route.isNotFound ? "/404" : route.path,
    // `routePath` is always the path specified on the <Route> component
    // (or the special /404 path)
    routePath: route.isNotFound ? "/404" : route.path,
    hasParams: route.hasParameters,
    id: route.id,
    isNotFound: route.isNotFound,
    filePath: route.page?.filePath,
    pageIdentifier: route.page_identifier_str
  }));
  return prerenderRoutes;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  detectPrerenderRoutes
});
