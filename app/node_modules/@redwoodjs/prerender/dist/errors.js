"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var errors_exports = {};
__export(errors_exports, {
  GqlHandlerImportError: () => GqlHandlerImportError,
  JSONParseError: () => JSONParseError,
  PrerenderGqlError: () => PrerenderGqlError
});
module.exports = __toCommonJS(errors_exports);
var import_graphql = require("graphql");
class PrerenderGqlError extends Error {
  stack;
  constructor(message) {
    super("GQL error: " + message);
    this.stack = this.message;
  }
}
class GqlHandlerImportError extends Error {
  stack;
  constructor(message) {
    super("Gql Handler Import Error:  " + message);
    this.stack = this.message;
  }
}
class JSONParseError extends Error {
  constructor({ query, variables, result }) {
    const message = "Could not parse the GraphQL response.\n  Request: " + (0, import_graphql.print)(query).split("\n").join("\n  ") + "\n  Variables: " + JSON.stringify(variables) + "\n  Response: " + result;
    super(message);
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  GqlHandlerImportError,
  JSONParseError,
  PrerenderGqlError
});
