import { AsyncLocalStorage } from 'async_hooks';
import type { ServerAuthState } from '@redwoodjs/auth/dist/AuthProvider/ServerAuthProvider.js' with { 'resolution-mode': 'import' };
import { CookieJar } from '@redwoodjs/cookie-jar';
export interface ServerStore extends Map<string, any> {
}
type InitPerReqMapParams = {
    headers: Headers | Record<string, string>;
    fullUrl: string;
    serverAuthState?: ServerAuthState;
};
export declare const createServerStorage: () => AsyncLocalStorage<ServerStore>;
/**
 *
 * This function just creates a Map, that you pass to
 * serverStorage.run(MAP_HERE, () => { ... })
 */
export declare const createPerRequestMap: ({ headers, fullUrl, serverAuthState, }: InitPerReqMapParams) => Map<any, any>;
export declare const getRequestCookies: () => CookieJar;
export declare const getRequestHeaders: () => Headers;
export declare const getAuthState: () => ServerAuthState;
export declare const getLocation: () => URL;
export declare const setServerAuthState: (authState: ServerAuthState) => void;
export {};
//# sourceMappingURL=serverStore.d.ts.map