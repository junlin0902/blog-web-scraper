import type { TransformOptions } from '@babel/core';
import type { RegisterHookOptions } from './common';
export interface Flags {
    forJest?: boolean;
    forPrerender?: boolean;
    forJavaScriptLinting?: boolean;
}
export declare const getWebSideBabelPlugins: ({ forJest }?: Flags) => TransformOptions[];
export declare const getWebSideOverrides: ({ forPrerender }?: Flags) => TransformOptions[];
export declare const getWebSideBabelPresets: (options: Flags) => ((string | undefined)[] | (string | object)[])[];
export declare const getWebSideBabelConfigPath: () => string | undefined;
export declare const getWebSideDefaultBabelConfig: (options?: Flags) => {
    presets: ((string | undefined)[] | (string | object)[])[];
    plugins: TransformOptions[];
    overrides: TransformOptions[];
    extends: string | undefined;
    babelrc: boolean;
    ignore: string[];
};
export declare const registerWebSideBabelHook: ({ plugins, overrides, options, }?: RegisterHookOptions) => void;
//# sourceMappingURL=web.d.ts.map