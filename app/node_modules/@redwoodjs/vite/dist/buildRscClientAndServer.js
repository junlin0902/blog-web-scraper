import { rscBuildAnalyze } from "./rsc/rscBuildAnalyze.js";
import { rscBuildClient } from "./rsc/rscBuildClient.js";
import { rscBuildCopyCssAssets } from "./rsc/rscBuildCopyCssAssets.js";
import { rscBuildEntriesMappings } from "./rsc/rscBuildEntriesFile.js";
import { rscBuildForServer } from "./rsc/rscBuildForServer.js";
import { rscBuildForSsr } from "./rsc/rscBuildForSsr.js";
import { rscBuildRwEnvVars } from "./rsc/rscBuildRwEnvVars.js";
const buildRscClientAndServer = async ({
  verbose = false
}) => {
  const { clientEntryFiles, serverEntryFiles } = await rscBuildAnalyze();
  const clientBuildOutput = await rscBuildClient(clientEntryFiles);
  const ssrBuildOutput = await rscBuildForSsr({ clientEntryFiles, verbose });
  const serverBuildOutput = await rscBuildForServer(
    clientEntryFiles,
    serverEntryFiles,
    {}
  );
  await rscBuildCopyCssAssets(serverBuildOutput);
  await rscBuildEntriesMappings(
    clientBuildOutput,
    ssrBuildOutput,
    serverBuildOutput,
    clientEntryFiles
  );
  await rscBuildRwEnvVars();
};
export {
  buildRscClientAndServer
};
