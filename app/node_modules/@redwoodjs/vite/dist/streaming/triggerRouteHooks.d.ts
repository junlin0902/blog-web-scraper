import type { ViteDevServer } from 'vite';
import type { MetaHook, RouteHookOutput, TagDescriptor } from '@redwoodjs/web';
interface RouteHooks {
    meta?: MetaHook;
}
interface TriggerRouteHooksParam {
    routeHooks: RouteHooks;
    req: Request;
    parsedParams?: Record<string, any>;
    previousOutput?: RouteHookOutput;
}
export declare const triggerRouteHooks: ({ routeHooks, req, parsedParams, previousOutput, }: TriggerRouteHooksParam) => Promise<{
    meta: TagDescriptor[];
}>;
interface LoadAndRunRouteHooks {
    paths: (string | null | undefined)[];
    reqMeta: {
        req: Request;
        parsedParams?: Record<string, any>;
    };
    viteDevServer?: ViteDevServer;
    previousOutput?: RouteHookOutput;
}
export declare const loadAndRunRouteHooks: ({ paths, reqMeta, viteDevServer, previousOutput, }: LoadAndRunRouteHooks) => Promise<RouteHookOutput>;
export {};
//# sourceMappingURL=triggerRouteHooks.d.ts.map