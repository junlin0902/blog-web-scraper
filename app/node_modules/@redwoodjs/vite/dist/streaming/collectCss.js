import { normalizePath } from "vite";
const componentsModules = (components, vite) => {
  const matchedModules = /* @__PURE__ */ new Set();
  components.forEach((component) => {
    const modules = vite.moduleGraph.getModulesByFile(normalizePath(component));
    modules?.forEach((mod) => {
      matchedModules.add(mod);
    });
  });
  return matchedModules;
};
const collectCssPaths = (mods, cssLinks = /* @__PURE__ */ new Set(), checkedComponents = /* @__PURE__ */ new Set()) => {
  for (const mod of mods) {
    if (mod.file?.endsWith(".scss") || mod.file?.endsWith(".css") || mod.file?.endsWith(".less")) {
      cssLinks.add(mod.url);
    }
    if (mod.importedModules.size > 0 && !checkedComponents.has(mod.id)) {
      checkedComponents.add(mod.id);
      collectCssPaths(mod.importedModules, cssLinks, checkedComponents);
    }
  }
  return cssLinks;
};
export {
  collectCssPaths,
  componentsModules
};
