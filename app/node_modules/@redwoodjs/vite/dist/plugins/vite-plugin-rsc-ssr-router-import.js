import path from "node:path";
import babelGenerator from "@babel/generator";
const { default: generate } = babelGenerator;
import { parse as babelParse } from "@babel/parser/index.cjs";
import babelTraverse from "@babel/traverse";
const { default: traverse } = babelTraverse;
import * as t from "@babel/types";
import { normalizePath } from "vite";
import { getPaths } from "@redwoodjs/project-config";
function rscSsrRouterImport() {
  const routesFileId = normalizePath(getPaths().web.routes);
  return {
    name: "rsc-ssr-router-import",
    transform: async function(code, id) {
      if (id !== routesFileId) {
        return null;
      }
      const ext = path.extname(id);
      const plugins = [];
      if (ext === ".jsx") {
        plugins.push("jsx");
      }
      const ast = babelParse(code, {
        sourceType: "unambiguous",
        plugins
      });
      traverse(ast, {
        ImportDeclaration(path2) {
          const source = path2.node.source.value;
          if (source === "@redwoodjs/router/RscRouter") {
            path2.node.source = t.stringLiteral("@redwoodjs/router/SsrRouter");
          }
        }
      });
      return generate(ast).code;
    }
  };
}
export {
  rscSsrRouterImport
};
