"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var collectCss_exports = {};
__export(collectCss_exports, {
  collectCssPaths: () => collectCssPaths,
  componentsModules: () => componentsModules
});
module.exports = __toCommonJS(collectCss_exports);
var import_vite = require("vite");
const componentsModules = (components, vite) => {
  const matchedModules = /* @__PURE__ */ new Set();
  components.forEach((component) => {
    const modules = vite.moduleGraph.getModulesByFile((0, import_vite.normalizePath)(component));
    modules?.forEach((mod) => {
      matchedModules.add(mod);
    });
  });
  return matchedModules;
};
const collectCssPaths = (mods, cssLinks = /* @__PURE__ */ new Set(), checkedComponents = /* @__PURE__ */ new Set()) => {
  for (const mod of mods) {
    if (mod.file?.endsWith(".scss") || mod.file?.endsWith(".css") || mod.file?.endsWith(".less")) {
      cssLinks.add(mod.url);
    }
    if (mod.importedModules.size > 0 && !checkedComponents.has(mod.id)) {
      checkedComponents.add(mod.id);
      collectCssPaths(mod.importedModules, cssLinks, checkedComponents);
    }
  }
  return cssLinks;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  collectCssPaths,
  componentsModules
});
