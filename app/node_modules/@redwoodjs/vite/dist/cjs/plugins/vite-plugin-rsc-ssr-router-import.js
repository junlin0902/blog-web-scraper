"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var vite_plugin_rsc_ssr_router_import_exports = {};
__export(vite_plugin_rsc_ssr_router_import_exports, {
  rscSsrRouterImport: () => rscSsrRouterImport
});
module.exports = __toCommonJS(vite_plugin_rsc_ssr_router_import_exports);
var import_node_path = __toESM(require("node:path"), 1);
var import_generator = __toESM(require("@babel/generator"), 1);
var import_parser = require("@babel/parser/index.cjs");
var import_traverse = __toESM(require("@babel/traverse"), 1);
var t = __toESM(require("@babel/types"), 1);
var import_vite = require("vite");
var import_project_config = require("@redwoodjs/project-config");
const { default: generate } = import_generator.default;
const { default: traverse } = import_traverse.default;
function rscSsrRouterImport() {
  const routesFileId = (0, import_vite.normalizePath)((0, import_project_config.getPaths)().web.routes);
  return {
    name: "rsc-ssr-router-import",
    transform: async function(code, id) {
      if (id !== routesFileId) {
        return null;
      }
      const ext = import_node_path.default.extname(id);
      const plugins = [];
      if (ext === ".jsx") {
        plugins.push("jsx");
      }
      const ast = (0, import_parser.parse)(code, {
        sourceType: "unambiguous",
        plugins
      });
      traverse(ast, {
        ImportDeclaration(path2) {
          const source = path2.node.source.value;
          if (source === "@redwoodjs/router/RscRouter") {
            path2.node.source = t.stringLiteral("@redwoodjs/router/SsrRouter");
          }
        }
      });
      return generate(ast).code;
    }
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  rscSsrRouterImport
});
