import { setServerAuthState } from "@redwoodjs/server-store";
import {
  MiddlewareResponse,
  MiddlewareRequest,
  MiddlewareShortCircuit
} from "@redwoodjs/web/dist/server/middleware";
const invoke = async (req, middleware, options) => {
  const mwReq = new MiddlewareRequest(req);
  if (typeof middleware !== "function") {
    setServerAuthState(mwReq.serverAuthState.get());
    return [MiddlewareResponse.next(), mwReq.serverAuthState.get()];
  }
  let mwRes = MiddlewareResponse.next();
  try {
    const output = await middleware(mwReq, MiddlewareResponse.next(), options) || MiddlewareResponse.next();
    mwRes = output;
  } catch (e) {
    if (e instanceof MiddlewareShortCircuit) {
      return [e.mwResponse, mwReq.serverAuthState.get()];
    }
    console.error("Error executing middleware > \n");
    console.error("~".repeat(80));
    console.error(e);
    console.error("~".repeat(80));
  } finally {
    setServerAuthState(mwReq.serverAuthState.get());
  }
  return [mwRes, mwReq.serverAuthState.get()];
};
export {
  invoke
};
