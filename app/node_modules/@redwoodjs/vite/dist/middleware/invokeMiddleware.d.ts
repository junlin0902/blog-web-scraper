import type { ServerAuthState } from '@redwoodjs/auth/dist/AuthProvider/ServerAuthProvider.js';
import { MiddlewareResponse } from '@redwoodjs/web/dist/server/middleware';
import type { Middleware, MiddlewareInvokeOptions } from '@redwoodjs/web/middleware';
/**
 * Invokes the middleware function, and guarantees a MiddlewareResponse object
 * is returned (also making sure that the eventual Response will be of
 * type PonyResponse)
 *
 * Returns promise that will resolve to a tuple of
 * [MiddlewareResponse, ServerAuthState]
 * and will always make sure there is a ServerAuthState set
 */
export declare const invoke: (req: Request, middleware?: Middleware, options?: MiddlewareInvokeOptions) => Promise<[MiddlewareResponse, ServerAuthState]>;
//# sourceMappingURL=invokeMiddleware.d.ts.map