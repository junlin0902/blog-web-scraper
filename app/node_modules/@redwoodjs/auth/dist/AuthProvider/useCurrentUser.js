import { useCallback } from "react";
import { useToken } from "./useToken.js";
const useCurrentUser = (authImplementation) => {
  const getToken = useToken(authImplementation);
  return useCallback(async () => {
    const token = await getToken();
    const response = await globalThis.fetch(globalThis.RWJS_API_GRAPHQL_URL, {
      method: "POST",
      credentials: "include",
      headers: {
        "content-type": "application/json",
        "auth-provider": authImplementation.type,
        authorization: `Bearer ${token}`
      },
      body: JSON.stringify({
        query: "query __REDWOOD__AUTH_GET_CURRENT_USER { redwood { currentUser } }"
      })
    });
    if (response.ok) {
      const { data } = await response.json();
      return data?.redwood?.currentUser;
    } else {
      throw new Error(
        `Could not fetch current user: ${response.statusText} (${response.status})`
      );
    }
  }, [authImplementation, getToken]);
};
export {
  useCurrentUser
};
