"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var useAuth_exports = {};
__export(useAuth_exports, {
  createUseAuth: () => createUseAuth,
  useNoAuth: () => useNoAuth
});
module.exports = __toCommonJS(useAuth_exports);
var import_react = __toESM(require("react"), 1);
function createUseAuth(AuthContext) {
  const useAuth = () => {
    const context = import_react.default.useContext(AuthContext);
    if (!context) {
      throw new Error("useAuth must be used within an AuthProvider");
    }
    return context;
  };
  return useAuth;
}
function useNoAuth() {
  return {
    loading: false,
    isAuthenticated: false,
    logIn: async () => {
    },
    logOut: async () => {
    },
    signUp: async () => {
    },
    currentUser: null,
    userMetadata: null,
    getToken: async () => null,
    getCurrentUser: async () => null,
    hasRole: () => false,
    reauthenticate: async () => {
    },
    forgotPassword: async () => {
    },
    resetPassword: async () => {
    },
    validateResetToken: async () => {
    },
    type: "default",
    client: void 0,
    hasError: false
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createUseAuth,
  useNoAuth
});
