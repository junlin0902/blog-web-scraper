"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var useHasRole_exports = {};
__export(useHasRole_exports, {
  useHasRole: () => useHasRole
});
module.exports = __toCommonJS(useHasRole_exports);
var import_react = require("react");
const useHasRole = (currentUser) => {
  return (0, import_react.useCallback)(
    (rolesToCheck) => {
      if (currentUser?.roles) {
        if (typeof rolesToCheck === "string") {
          if (typeof currentUser.roles === "string") {
            return currentUser.roles === rolesToCheck;
          } else if (Array.isArray(currentUser.roles)) {
            return currentUser.roles?.some(
              (allowedRole) => rolesToCheck === allowedRole
            );
          }
        }
        if (Array.isArray(rolesToCheck)) {
          if (Array.isArray(currentUser.roles)) {
            return currentUser.roles?.some(
              (allowedRole) => rolesToCheck.includes(allowedRole)
            );
          } else if (typeof currentUser.roles === "string") {
            return rolesToCheck.some(
              (allowedRole) => currentUser?.roles === allowedRole
            );
          }
        }
      }
      return false;
    },
    [currentUser]
  );
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useHasRole
});
