"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var SshExecutor_exports = {};
__export(SshExecutor_exports, {
  SshExecutor: () => SshExecutor
});
module.exports = __toCommonJS(SshExecutor_exports);
class SshExecutor {
  constructor(verbose) {
    const { NodeSSH } = require("node-ssh");
    this.ssh = new NodeSSH();
    this.verbose = verbose;
  }
  /**
   * Executes a single command via SSH connection. Throws an error and sets
   * the exit code with the same code returned from the SSH command.
   */
  async exec(path, command, args) {
    const argsString = args?.join(" ") || "";
    const sshCommand = command + (argsString ? ` ${argsString}` : "");
    if (this.verbose) {
      console.log(
        `SshExecutor::exec running command \`${sshCommand}\` in ${path}`
      );
    }
    const result = await this.ssh.execCommand(sshCommand, {
      cwd: path
    });
    if (result.code !== 0) {
      const error = new Error(
        `Error while running command \`${sshCommand}\` in ${path}
` + result.stderr
      );
      error.exitCode = result.code;
      throw error;
    }
    return result;
  }
  connect(options) {
    return this.ssh.connect(options);
  }
  dispose() {
    return this.ssh.dispose();
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SshExecutor
});
