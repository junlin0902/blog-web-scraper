"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var cors_exports = {};
__export(cors_exports, {
  mapRwCorsOptionsToYoga: () => mapRwCorsOptionsToYoga
});
module.exports = __toCommonJS(cors_exports);
const mapRwCorsOptionsToYoga = (rwCorsConfig, requestOrigin) => {
  const yogaCORSOptions = {};
  if (!rwCorsConfig) {
    return false;
  }
  if (rwCorsConfig?.methods) {
    if (typeof rwCorsConfig.methods === "string") {
      yogaCORSOptions.methods = [rwCorsConfig.methods];
    } else if (Array.isArray(rwCorsConfig.methods)) {
      yogaCORSOptions.methods = rwCorsConfig.methods;
    }
  }
  if (rwCorsConfig?.allowedHeaders) {
    if (typeof rwCorsConfig.allowedHeaders === "string") {
      yogaCORSOptions.allowedHeaders = [rwCorsConfig.allowedHeaders];
    } else if (Array.isArray(rwCorsConfig.allowedHeaders)) {
      yogaCORSOptions.allowedHeaders = rwCorsConfig.allowedHeaders;
    }
  }
  if (rwCorsConfig?.exposedHeaders) {
    if (typeof rwCorsConfig.exposedHeaders === "string") {
      yogaCORSOptions.exposedHeaders = [rwCorsConfig.exposedHeaders];
    } else if (Array.isArray(rwCorsConfig.exposedHeaders)) {
      yogaCORSOptions.exposedHeaders = rwCorsConfig.exposedHeaders;
    }
  }
  if (rwCorsConfig?.credentials) {
    yogaCORSOptions.credentials = rwCorsConfig.credentials;
  }
  if (rwCorsConfig?.maxAge) {
    yogaCORSOptions.maxAge = rwCorsConfig.maxAge;
  }
  if (rwCorsConfig?.origin) {
    if (typeof rwCorsConfig.origin === "string") {
      yogaCORSOptions.origin = [rwCorsConfig.origin];
    } else if (rwCorsConfig.origin === true) {
      yogaCORSOptions.origin = [requestOrigin || "*"];
    } else {
      yogaCORSOptions.origin = rwCorsConfig.origin;
    }
  }
  return yogaCORSOptions;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  mapRwCorsOptionsToYoga
});
