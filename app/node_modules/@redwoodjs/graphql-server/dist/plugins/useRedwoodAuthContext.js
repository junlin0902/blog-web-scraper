"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var useRedwoodAuthContext_exports = {};
__export(useRedwoodAuthContext_exports, {
  useRedwoodAuthContext: () => useRedwoodAuthContext
});
module.exports = __toCommonJS(useRedwoodAuthContext_exports);
var import_api = require("@redwoodjs/api");
const useRedwoodAuthContext = (getCurrentUser, authDecoder) => {
  return {
    async onContextBuilding({ context, extendContext }) {
      const { requestContext } = context;
      let authContext = void 0;
      try {
        authContext = await (0, import_api.getAuthenticationContext)({
          authDecoder,
          event: context.event,
          context: requestContext
        });
      } catch (error) {
        throw new Error(
          `Exception in getAuthenticationContext: ${error.message}`
        );
      }
      try {
        if (authContext) {
          const currentUser = getCurrentUser ? await getCurrentUser(
            authContext[0],
            authContext[1],
            authContext[2]
          ) : null;
          if (currentUser) {
            extendContext({ currentUser });
          }
        }
      } catch (error) {
        throw new Error(`Exception in getCurrentUser: ${error.message}`);
      }
    }
  };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useRedwoodAuthContext
});
