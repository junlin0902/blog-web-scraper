"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var apiCLIConfig_exports = {};
__export(apiCLIConfig_exports, {
  builder: () => builder,
  description: () => description,
  handler: () => handler
});
module.exports = __toCommonJS(apiCLIConfig_exports);
const description = "Start a server for serving the api side";
function builder(yargs) {
  yargs.options({
    port: {
      description: "The port to listen at",
      type: "number",
      alias: "p"
    },
    host: {
      description: "The host to listen at. Note that you most likely want this to be '0.0.0.0' in production",
      type: "string"
    },
    apiRootPath: {
      description: "Root path where your api functions are served",
      type: "string",
      alias: ["api-root-path", "rootPath", "root-path"],
      default: "/"
    },
    // This became a no-op in v7 because env files weren't loaded by default
    // but removing it would break yargs parsing for older projects,
    // so leaving it here so that yargs doesn't throw an error
    loadEnvFiles: {
      hidden: true
    }
  });
}
async function handler(options) {
  const { handler: handler2 } = await import("./apiCLIConfigHandler.js");
  await handler2(options);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  builder,
  description,
  handler
});
