import cookie from 'cookie';
export type CookieParams = {
    value: string;
    options?: cookie.CookieSerializeOptions;
};
/** Specialized cookie map, that lets you set cookies with options */
export declare class CookieJar {
    private map;
    constructor(cookieString?: string | null);
    set(name: string, value: string, options?: cookie.CookieSerializeOptions): this;
    get(name: string): string | undefined;
    getWithOptions(name: string): CookieParams | undefined;
    has(name: string): boolean;
    /**
     * Won't delete a cookie from the jar, but will set it to expire
     * and set an empty value
     */
    unset(name: string): Map<string, CookieParams>;
    /** Clear all cookies, or remove a specific cookie from the jar */
    clear(name?: string): void;
    entries(): MapIterator<[string, CookieParams]>;
    [Symbol.iterator](): MapIterator<[string, CookieParams]>;
    get size(): number;
}
//# sourceMappingURL=CookieJar.d.ts.map