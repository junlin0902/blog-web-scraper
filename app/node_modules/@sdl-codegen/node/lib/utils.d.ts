import * as graphql from "graphql";
import * as tsMorph from "ts-morph";
import { TypeMapper } from "./typeMap.js";
export declare const varStartsWithUppercase: (v: tsMorph.VariableDeclaration) => boolean;
export declare const nameDoesNotStartsWithUnderscore: (v: tsMorph.VariableDeclaration) => boolean;
export declare const capitalizeFirstLetter: (str: string) => string;
export declare const variableDeclarationIsAsync: (vd: tsMorph.VariableDeclaration) => boolean;
export declare const inlineArgsForField: (field: graphql.GraphQLField<unknown, unknown>, config: {
    mapper: TypeMapper["map"];
}) => string | undefined;
export declare const createAndReferOrInlineArgsForField: (field: graphql.GraphQLField<unknown, unknown>, config: {
    file: tsMorph.SourceFile;
    mapper: TypeMapper["map"];
    name: string;
    noSeparateType?: true;
}) => string | undefined;
//# sourceMappingURL=utils.d.ts.map