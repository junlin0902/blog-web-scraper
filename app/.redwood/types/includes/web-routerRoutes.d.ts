// This file was generated by RedwoodJS
import { RouteParams, QueryParams } from '@redwoodjs/router'

declare module '@redwoodjs/router' {
  interface AvailableRoutes {
    // Only "<Route />" components with a "name" and "path" prop will be populated here.
    newBlogContent: (params?: RouteParams<"/blog-contents/new"> & QueryParams) => "/blog-contents/new"
    editBlogContent: (params?: RouteParams<"/blog-contents/{id:Int}/edit"> & QueryParams) => "/blog-contents/{id:Int}/edit"
    blogContent: (params?: RouteParams<"/blog-contents/{id:Int}"> & QueryParams) => "/blog-contents/{id:Int}"
    blogContents: (params?: RouteParams<"/blog-contents"> & QueryParams) => "/blog-contents"
    newPost: (params?: RouteParams<"/posts/new"> & QueryParams) => "/posts/new"
    editPost: (params?: RouteParams<"/posts/{id:Int}/edit"> & QueryParams) => "/posts/{id:Int}/edit"
    post: (params?: RouteParams<"/posts/{id:Int}"> & QueryParams) => "/posts/{id:Int}"
    posts: (params?: RouteParams<"/posts"> & QueryParams) => "/posts"
    home: (params?: RouteParams<"/"> & QueryParams) => "/"
  }

  export function useRoutePaths(): Record<keyof AvailableRoutes, string>
  export function useRoutePath(routeName: keyof AvailableRoutes): string

  /** Gets the name of the current route (as defined in your Routes file) */
  export function useRouteName(): keyof AvailableRoutes | undefined
}

//# sourceMappingURL=web-routerRoutes.d.ts.map
