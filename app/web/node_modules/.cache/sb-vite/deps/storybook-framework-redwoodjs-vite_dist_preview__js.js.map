{
  "version": 3,
  "sources": ["../../../../../node_modules/storybook-framework-redwoodjs-vite/dist/preview.js", "../../../../../node_modules/storybook-framework-redwoodjs-vite/dist/mocks/StorybookProvider.js", "../../../../../node_modules/storybook-framework-redwoodjs-vite/dist/mocks/MockProviders.js", "../../../../../node_modules/storybook-framework-redwoodjs-vite/dist/mocks/MockParamsProvider.js"],
  "sourcesContent": ["import React from \"react\";\nimport { MockingLoader, StorybookProvider } from \"./mocks/StorybookProvider\";\nconst decorators = [\n  (storyFn, { id }) => {\n    return React.createElement(StorybookProvider, { storyFn, id });\n  }\n];\nconst loaders = [MockingLoader];\nvar preview_default = {\n  decorators,\n  loaders\n};\nexport {\n  preview_default as default\n};\n", "import * as React from \"react\";\nimport {\n  setupRequestHandlers,\n  startMSW,\n  mockCurrentUser\n} from \"@redwoodjs/testing/web\";\nimport { MockProviders } from \"./MockProviders\";\nconst MockingLoader = async () => {\n  import.meta.glob(\"~__REDWOOD__USER_WEB_SRC/**/*.+(mock).(js|ts)\", {\n    eager: true\n  });\n  await startMSW(\"browsers\");\n  setupRequestHandlers();\n  return {};\n};\nconst StorybookProvider = ({ storyFn }) => {\n  mockCurrentUser(null);\n  return /* @__PURE__ */ React.createElement(MockProviders, null, storyFn());\n};\nexport {\n  MockingLoader,\n  StorybookProvider\n};\n", "import React from \"react\";\nimport { LocationProvider } from \"@redwoodjs/router\";\nimport { useAuth } from \"@redwoodjs/testing/web\";\nimport { RedwoodProvider } from \"@redwoodjs/web\";\nimport { RedwoodApolloProvider } from \"@redwoodjs/web/apollo\";\nimport { MockParamsProvider } from \"./MockParamsProvider\";\nlet UserRoutes;\ntry {\n  const userRoutesModule = require(\"~__REDWOOD__USER_ROUTES_FOR_MOCK\");\n  UserRoutes = userRoutesModule.default;\n} catch {\n  UserRoutes = () => /* @__PURE__ */ React.createElement(React.Fragment, null);\n}\nconst MockProviders = ({ children }) => {\n  return /* @__PURE__ */ React.createElement(RedwoodProvider, { titleTemplate: \"%PageTitle | %AppTitle\" }, /* @__PURE__ */ React.createElement(RedwoodApolloProvider, { useAuth }, /* @__PURE__ */ React.createElement(UserRoutes, null), /* @__PURE__ */ React.createElement(LocationProvider, null, /* @__PURE__ */ React.createElement(MockParamsProvider, null, children))));\n};\nexport {\n  MockProviders\n};\n", "import React from \"react\";\nimport { useLocation, ParamsContext, parseSearch } from \"@redwoodjs/router\";\nconst MockParamsProvider = ({ children }) => {\n  const location = useLocation();\n  const searchParams = parseSearch(location.search);\n  return /* @__PURE__ */ React.createElement(ParamsContext.Provider, { value: { params: { ...searchParams } } }, children);\n};\nexport {\n  MockParamsProvider\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,gBAAA;AAAA,IAAAA,gBAAA;AAAA,IAAAA,gBAAA;AAAA,IAAAC,gBAAkB;;;ACAlB,IAAAC,eAAA;AAAA,IAAAA,eAAA;AAAA,IAAAA,eAAA;AAAA,IAAAC,SAAuB;AACvB,IAAAC,cAIO;;;ACLP,IAAAC,eAAA;AAAA,IAAAA,eAAA;AAAA,IAAAA,eAAA;AAAA,IAAAC,gBAAkB;AAElB,iBAAwB;;;ACFxB;AAAA,IAAAC,eAAA;AAAA,IAAAA,eAAA;AAAA,mBAAkB;AAElB,IAAM,qBAAqB,CAAC,EAAE,SAAS,MAAM;AAC3C,QAAM,WAAW,YAAY;AAC7B,QAAM,eAAe,YAAY,SAAS,MAAM;AAChD,SAAuB,aAAAC,QAAM,cAAc,cAAc,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,aAAa,EAAE,EAAE,GAAG,QAAQ;AACzH;;;ADAA,IAAI;AACJ,IAAI;AACF,QAAM,mBAAmB,UAAQ,kCAAkC;AACnE,eAAa,iBAAiB;AAChC,QAAQ;AACN,eAAa,MAAsB,cAAAC,QAAM,cAAc,cAAAA,QAAM,UAAU,IAAI;AAC7E;AACA,IAAM,gBAAgB,CAAC,EAAE,SAAS,MAAM;AACtC,SAAuB,cAAAA,QAAM,cAAc,iBAAiB,EAAE,eAAe,yBAAyB,GAAmB,cAAAA,QAAM,cAAc,uBAAuB,EAAE,4BAAQ,GAAmB,cAAAA,QAAM,cAAc,YAAY,IAAI,GAAmB,cAAAA,QAAM,cAAc,kBAAkB,MAAsB,cAAAA,QAAM,cAAc,oBAAoB,MAAM,QAAQ,CAAC,CAAC,CAAC;AAC/W;;;ADRA,IAAM,gBAAgB,YAAY;AAChC,cAAY,KAAK,iDAAiD;AAAA,IAChE,OAAO;AAAA,EACT,CAAC;AACD,YAAM,sBAAS,UAAU;AACzB,wCAAqB;AACrB,SAAO,CAAC;AACV;AACA,IAAM,oBAAoB,CAAC,EAAE,QAAQ,MAAM;AACzC,mCAAgB,IAAI;AACpB,SAA6B,qBAAc,eAAe,MAAM,QAAQ,CAAC;AAC3E;;;ADhBA,IAAM,aAAa;AAAA,EACjB,CAAC,SAAS,EAAE,GAAG,MAAM;AACnB,WAAO,cAAAC,QAAM,cAAc,mBAAmB,EAAE,SAAS,GAAG,CAAC;AAAA,EAC/D;AACF;AACA,IAAM,UAAU,CAAC,aAAa;AAC9B,IAAI,kBAAkB;AAAA,EACpB;AAAA,EACA;AACF;",
  "names": ["import_dist", "import_react", "import_dist", "React", "import_web", "import_dist", "import_react", "import_dist", "React", "React", "React"]
}
