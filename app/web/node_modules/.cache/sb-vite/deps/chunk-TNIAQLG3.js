import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  require_client
} from "./chunk-IN4XXK5G.js";
import {
  require_react
} from "./chunk-52LGRYSO.js";
import {
  __toESM,
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-QGZREBOA.js";

// ../node_modules/@storybook/react-dom-shim/dist/react-18.mjs
var import_dist = __toESM(require_dist(), 1);
var import_dist2 = __toESM(require_dist2(), 1);
var import_dist3 = __toESM(require_dist3(), 1);
var import_react = __toESM(require_react(), 1);
var import_client = __toESM(require_client(), 1);
var nodes = /* @__PURE__ */ new Map();
var WithCallback = ({ callback, children }) => {
  let once = (0, import_react.useRef)();
  return (0, import_react.useLayoutEffect)(() => {
    once.current !== callback && (once.current = callback, callback());
  }, [callback]), children;
};
var renderElement = async (node, el) => {
  let root = await getReactRoot(el);
  return new Promise((resolve) => {
    root.render(import_react.default.createElement(WithCallback, { callback: () => resolve(null) }, node));
  });
};
var unmountElement = (el, shouldUseNewRootApi) => {
  let root = nodes.get(el);
  root && (root.unmount(), nodes.delete(el));
};
var getReactRoot = async (el) => {
  let root = nodes.get(el);
  return root || (root = import_client.default.createRoot(el), nodes.set(el, root)), root;
};

export {
  renderElement,
  unmountElement
};
//# sourceMappingURL=chunk-TNIAQLG3.js.map
