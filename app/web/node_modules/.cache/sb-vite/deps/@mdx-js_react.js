import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  require_react
} from "./chunk-52LGRYSO.js";
import {
  __toESM,
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-QGZREBOA.js";

// ../node_modules/@mdx-js/react/index.js
var import_dist4 = __toESM(require_dist());
var import_dist5 = __toESM(require_dist2());
var import_dist6 = __toESM(require_dist3());

// ../node_modules/@mdx-js/react/lib/index.js
var import_dist = __toESM(require_dist(), 1);
var import_dist2 = __toESM(require_dist2(), 1);
var import_dist3 = __toESM(require_dist3(), 1);
var import_react = __toESM(require_react(), 1);
var MDXContext = import_react.default.createContext({});
function withMDXComponents(Component) {
  return boundMDXComponent;
  function boundMDXComponent(props) {
    const allComponents = useMDXComponents(props.components);
    return import_react.default.createElement(Component, { ...props, allComponents });
  }
}
function useMDXComponents(components) {
  const contextComponents = import_react.default.useContext(MDXContext);
  return import_react.default.useMemo(() => {
    if (typeof components === "function") {
      return components(contextComponents);
    }
    return { ...contextComponents, ...components };
  }, [contextComponents, components]);
}
var emptyObject = {};
function MDXProvider({ components, children, disableParentContext }) {
  let allComponents;
  if (disableParentContext) {
    allComponents = typeof components === "function" ? components({}) : components || emptyObject;
  } else {
    allComponents = useMDXComponents(components);
  }
  return import_react.default.createElement(
    MDXContext.Provider,
    { value: allComponents },
    children
  );
}
export {
  MDXContext,
  MDXProvider,
  useMDXComponents,
  withMDXComponents
};
//# sourceMappingURL=@mdx-js_react.js.map
